=== Output data formats

Data is written to rasters, csv files, or geojson file. 

* The rasters are all in ENVI `bil` format, which you can read about in the section: <<Preparing your data>>. 
+
IMPORTANT: ENVI bil should not be mistaken for ESRI bil. Make sure you are using ENVI bil format. 
+
* The **csv** files are comma separated value files which can be read by spreadsheets and GIS software. 
** If you import csv files into a GIS you need to tell the GIS about the coordinate system.  
** Our csv files all have labeled columns so their contents can be easily views. 
** Almost all of our csv files contain **latitude** and **longitude** columns. These columns are projected into the **WGS84** coordinate system for ease of plotting in GIS software. Select this coordiante system when you loa the csv file into your GIS. For reference it has the http://spatialreference.org/ref/epsg/wgs-84/[EPSG code 4326]. 
+
* It is very annoying to have to click buttons in a GIS to select a coordinate system each time you look at csv data, so we also allow you to convert to http://geojson.org/[geojson] format by using the flag `convert_csv_to_geojson` in the parameter file. 
** The advantage of these files is that they have georeferencing, so you can load them directly into a GIS or web mapping software. 
** The disadvantage is that they are *HUGE* compared to csv files (usually more than 10x the file size). If you are working within GIS software or using web mapping (e.g., https://d3js.org/[d3.js] or http://leafletjs.com/[leaflet]) you will probably want to generate these files but if you are using our python plotting tools you can probably forgo creating them.

=== The different outputs and how to get them

To get the various outputs, you need to tell the *chi mapping tool* using the parameter file. These tables tell you what flags to use and what data you will get. 

==== Raster output

[cols="1,1,2", options="header"]
.These are basic rasters that don't require chi analysis.
|===

|parameter file switch
|Filename contains
|Description

|write hillshade: true
|*_hs.bil*
|This prints a hillshade raster. Seems yto give better results than hillshade functions in GIS software. Also much faster. Much of our plotting tools make nice looking maps when you drape hillshade over elevation data so we suggest you turn this on the first time you analyse a landscape. 

|print_fill_raster: true
|*_fill.bil*
|This prints the fill raster. Filling is computationally expensive so you can do this the first time you run a DEM and then use the `raster_is_filled` flag later to speed up computation. 

|print_DrainageArea_raster: true
|*_DArea.bil*
|This prints the drainage area raster. Drainage area is calculated using the http://www.sciencedirect.com/science/article/pii/S0169555X12004618[Fastscape] D8 flow routing algorithm. 

|print_basin_raster: true
|*_AllBasins.bil*
|This prints the a basin raster raster. Each basin gets an integer value that is keyed to the baselevel. These correspond to the `baselevel_key` that appears in csv data files. 

|print_chi_coordinate_raster: true
|*_chi_coord.bil* or *_chi_coordQ.bil*
|This prints the chi coordinate. It uses the _A~0~_ and _m/n_ values set by the `A_0` and `m_over_n` flags in the parameter file (defaults are 1 m^2^ and 0.5, respectively). The raster will cacluated chi using drainage area, which results in the *_chi_coord.bil* file, unless the switch `use_precipitation_raster_for_chi` is set to true, in which case a discharge will be calucalted from a preciptation raster and this discharge will be used to calculate chi, resulting in a *_chi_coordQ.bil* file. 

|print_discharge_raster: true
|*_Q.bil*
|If `use_precipitation_raster_for_chi` is set to true, the discharge will be calculated and printed to a raster. Note that there is no eral hydrology in this calculation: one should think of it as a number representing the relative supply of water along the channel network. "Discharge" is calcualted simply by accumulating the volume of precipitation from each pixel, so precipitation is supplied in m/yr and "discharge" is in m^3^/yr.  

|print_chi_no_discharge: true
|*_chi_coord.bil* 
|Used only if you have set `use_precipitation_raster_for_chi` and `print_chi_coordinate_raster` to true, and you want a chi coordinate raster that is based on drainage area in addition to one based on discharge. Used for comparison purposes, so you can see how big of a change spatially heterogeneous precipitation causes to the chi coordinate.  

|===

==== Point data (usually output as csv)

The table below gives a brief description of the output files. After the table we show the format for each of these files. 

NOTE: If the `convert_csv_to_geojson` flag is set to `true` then the csv data headers will be recast as geojson point attributes. 
[cols="1,1,2,4", options="header"]
.Point data avaialbel in csv or geojson format
|===
|parameter file switch
|Filename contains
|Description
|Data columns

|print_channels_to_csv: true
|*_CN.csv*
|Prints the channel network to csv.  
|_latitude,longitude,Junction Index,Stream Order,NI_ 

_NI_ is the node index (an index into individual pixels in the DEM), and _Junction Index_ is an index into the `LSDJunctionNetwork` object. Latitude and longitude are in WGS84.

|print_junctions_to_csv: true
|*_JN.csv*
|Prints junction numbers to csv. 
|_junction,node,x,y,latitude,longitude,stream_order_ 

_junction_ is the junction index. Latitude and longitude are in WGS84, whereas _x_ and _y_ are in the local UTM coordinates.    


|print_simple_chi_map_to_csv: true
|*_chi_coord.csv*
|Prints a very basic chi map. 
|_latitude,longitude,chi_ 

Latitude and longitude are in WGS84, chi is in metres.    

|print_simple_chi_map_with_basins_to_csv: true
|*_chi_coord_basins.csv*
|Prints a very basic chi map, but includes the basin. 
|_latitude,longitude,chi,basin_junction_ 

Latitude and longitude are in WGS84, chi is in metres. The _basin_junction_ refers to the junction number of the baselevel junction for each node. Allows one to plot these profiles by basin. 

|print_simple_chi_map_with_basins_to_csv: true
|*_chi_coord_basins.csv*
|Prints a very basic chi map, but includes the basin. 
|_latitude,longitude,chi,basin_junction_ 

Latitude and longitude are in WGS84, chi is in metres. The _basin_junction_ refers to the junction number of the baselevel junction for each node. Allows one to plot these profiles by basin. 

|print_basic_M_chi_map_to_csv: true
|*_MChiBasic.csv*
|This is a very rudimentary version of a map of chi slope (if _A~0~_ = 1, then this is the same as the channel steepness index). No segmentation is performed, it simply calculates chi slope from smoothed profiles. 
|_latitude,longitude,chi,elevation,flow distance,drainage area,m_chi,b_chi,source_key,basin_key_ 

Latitude and longitude are in WGS84, chi and flow distance are in metres. Drainage area is in m^2^. _M_chi_ is the slope in chi space, equivalent to _k~sn~_ if _A~0~_ is set to 1. _b_chi_ is the intercept of the chi segment. The _source_key_ and _basin_key_ are indices into the basins and sources.

|print_basic_M_chi_map_to_csv: true
|*_MChiSegmented.csv*
|This uses segmentation to calculate chi slopes (if _A~0~_ = 1, then this is the same as the channel steepness index) following the http://onlinelibrary.wiley.com/doi/10.1002/2013JF002981/full[Mudd et al, 2014] algorithms.
|_latitude,longitude,chi,elevation,flow distance,drainage area,m_chi,b_chi,source_key,basin_key_ 

Latitude and longitude are in WGS84, chi and flow distance are in metres. Drainage area is in m^2^. _M_chi_ is the slope in chi space, equivalent to _k~sn~_ if _A~0~_ is set to 1. _b_chi_ is the intercept of the chi segment. The _source_key_ and _basin_key_ are indices into the basins and sources.

|check_chi_maps: true
|*_checkchi.csv* and *_checkchiQ.csv*
|This is used with the discharge-based chi calculation to compare chi values using discharge (`_checkchiQ.csv`) vs drainage area (`_checkchi.csv`).
|_latitude,longitude,chi,elevation,flow distance,drainage area,source_key,basin_key_

Latitude and longitude are in WGS84, chi and flow distance are in metres. Drainage area is in m^2^. The _source_key_ and _basin_key_ are indices into the basins and sources.


|===

==== Point data file formats

