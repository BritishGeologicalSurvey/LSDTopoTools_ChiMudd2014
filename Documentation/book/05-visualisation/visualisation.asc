== Visualisation

*LSDTopoTools* produces two main data types: raster data and point data. 
This chapter is a brief overview of ways to visualise these datasets. We go through some examples in the next chapter.

=== Using a GIS

* Raster data is output in ENVI bil format, which can be read by standard GIS software such as http://www.qgis.org/en/site/[QGIS] or https://www.arcgis.com/features/index.html[ArcMap]. 
* Point data is output as https://en.wikipedia.org/wiki/Comma-separated_values[csv] files. You can also choose to output these data as http://geojson.org/[geojson] files.
** To load csv files into a GIS, you will need to import them. Here are instructions http://www.qgistutorials.com/en/docs/importing_spreadsheets_csv.html[for QGIS] and for http://support.esri.com/technical-article/000012745[ArcMap]. In both cases you will need to tell your GIS what coordinate system the data is in. *LSDTopoTools* writes latitude and longitude to our csv files in the http://spatialreference.org/ref/epsg/wgs-84/[WGS84] geographic coordinate system.
** Geojson files are *huge* compared to csv files but they can be used for web mapping (e.g., https://d3js.org/[D3.js] or http://leafletjs.com/[leaflet]), and they are georeferences socan be loaded directly into a GIS using the "add vector data" functionality.

=== Using python

We have a number of visualisation scripts built using https://www.python.org/[python] and its packages http://www.numpy.org/[numpy], http://pandas.pydata.org/[pandas], and https://matplotlib.org/[matplotlib]. 

==== Setting up Python

IMPORTANT: Do not set up python in a vagrant server. Instead do it in your host operating system. The vagrant server is a stripped down version of Linux that cannot generate windows so you can have only limited functionality of these tools in a vagrant server. 

This is a quick guide. There are many options for setting up python but this is our preferred setup. 

. The best way to install python is http://conda.pydata.org/miniconda.html[miniconda]. Currently everything we use is tested on **Python 2.7**, so use the Python 2.7 installer. However, we have attempted to maintain compatibility to python 3.x. If you use that, it should be okay, but please report any bugs on the github page.  
+
WARNING: Our visualisation routines involve some computation, and dealing with geospatial data. This means that there are a numer of packages to install. This might take some time. If you are alreay using python for something critical you may consider setting up a https://realpython.com/blog/python/python-virtual-environments-a-primer/[virtual] http://python-guide-pt-br.readthedocs.io/en/latest/dev/virtualenvs/[environment] to ensure all of these new packages don't break what you've already got. 
+
. Once you have installed  http://conda.pydata.org/miniconda.html[miniconda], you can go into a powershell (windows) or terminal (MacOS and Linux) and get the other stuff you need:
+
[source,consol]
----
  PS> conda config --add channels conda-forge
  PS> conda install scipy
  PS> conda install matplotlib
  PS> conda install pandas
  PS> conda install shapely
  PS> conda install fiona
  PS> conda install gdal
  PS> conda install pyproj
  PS> conda install spyder  
----
+
. To run spyder you just type `spyder` at the command line. 
+
WARNING: Spyder needs an older version of a package called *PyQt*. If spyder doesn't start correctly, run `conda install pyqt=4.10 -f`  
+
NOTE: It is entirely possible that we have forgotten some package, but if you run one of our scripts and it tells you the package is not found, just use `conda` to install. 

==== Getting our plotting tools

*DO THIS IN YOUR HOST OPERATING SYSTEM*

Our vagrant setup has no graphic interface (you only interact with it through a terminal) so we suggest using your host operating system for python. 

. You need to clone our repository https://github.com/LSDtopotools/LSDMappingTools[LSDMappingTools]. 
+
WARNING: At the moment https://github.com/LSDtopotools/LSDMappingTools[LSDMappingTools] is a complete mess. It currently serves as a bit of a sandbox for visualisation development. One day we will clean it all up and make a nice, pretty release. But for now I'm afraid you'll need to rely on this repository. 
+
. If you don't want to install https://git-scm.com/[git] on your host operatring system, you can clone the repository from your vagrant machine. Becase of the clever way vagrant works you will be able to use these files in you host operating system.
+
[source,console]
----
$ cd /LSDTopoTools/Git_projects
$ git clone https://github.com/LSDtopotools/LSDMappingTools.git
----
+
NOTE: In your host operating system these files will not be in `/LSDTopoTools/Git_projects`. They will be within the `VagrantBoxes\LSDTopoTools\Git_projects` directory (wherever you put it. On windows I put mine in the `C` directory). 
+
. Once you have this repository you can move on to our examples in the next chapter. 

