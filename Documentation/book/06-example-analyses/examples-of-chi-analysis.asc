== Examples of chi analysis

We will now run some examples of chi analysis using the the *chi mapping tool*. 

WARNING: We are going to assume you are using our vagrant setup. That means that code will live in the directory `/LSDTopoTools/Git_projects/LSDTopoTool_ChiMudd2014` and topographic data will live in the directory `/LSDTopoTools/Topographic_projects`.

=== Get the example data

We have placed several example datasets in the github repository https://github.com/LSDtopotools/LSDTT_chi_examples[LSDTT_chi_examples]. You can clone these in your vagrant box into the `Topographic_projects` folder:

[source, console]
----
$ cd /LSDTopoTools/Topographic_projects
$ git clone https://github.com/LSDtopotools/LSDTT_chi_examples.git
----

=== First example: Basic DEM steps

First we will do some very basic extraction of basins and visualisation of a region near Xi'an China, in the mountains containing https://en.wikipedia.org/wiki/Mount_Hua[Hua Shan]. 

If you have followed the steps in the section: <<Getting the software>>, the *chi mapping tool* will already be installed, and the example driver file will be in the `LSDTT_chi_examples` folder. 

. Navigate to the directory with the *chi mapping tool*:
+
[source,console]
----
$ cd /LSDTopoTools/Git_projects/LSDTopoTool_ChiMudd2014/driver_functions_MuddChi2014/
----
+
. Now run the example driver file. 
+
[source,console]
----
$ ./chi_mapping_tool.exe /LSDTopoTools/Topographic_projects/LSDTT_chi_examples Xian_example1.driver
----
+
. The important elements of the driver file are: `test_drainage_boundaries: false` and `write hillshade: true`. These two lines mean that you will print a hillshade raster and you will not test the edges of the DEM. In fact `test_drainage_boundaries: false` is the default. Why is this important? The chi coordinate is caclualted integrating drainage area along the channel so if your basin is truncated by the edge of the DEM it means that *your chi coordinate will be incorrect*. 
+
. We are going to visualise the output using python. 
+
. In your host operating system, find the directory that contains the https://github.com/LSDtopotools/LSDMappingTools[LSDMappingTools] directory.
+
. You might want to open spyder (see the section: <<Getting our plotting tools>> on how to get this) to look at the python script. To open spyder simply type `spyder` into a powershell window (Windows)  or terminal (Linux/MaxOS).




